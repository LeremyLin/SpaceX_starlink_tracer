{"ast":null,"code":"var _jsxFileName = \"/Users/linsanity/Documents/Space-X/starlink/src/components/SatelliteList.js\";\nimport React, { Component } from 'react';\nimport { Button, Spin, List, Avatar, Checkbox } from 'antd';\nimport satellite from \"../assets/images/satellite.svg\";\n\nclass SatelliteList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selected: []\n    };\n\n    this.showMap = () => {\n      const {\n        selected\n      } = this.state;\n      this.props.onShowMap(selected);\n    };\n\n    this.onChange = e => {\n      const {\n        dataInfo,\n        checked\n      } = e.target;\n      const {\n        selected\n      } = this.state;\n      const list = this.addOrRemove(dataInfo, checked, selected);\n      this.setState({\n        selected: list\n      });\n    };\n\n    this.addOrRemove = (item, status, list) => {\n      const found = list.some(entry => entry.satid === item.satid);\n\n      if (status && !found) {\n        list.push(item);\n      }\n\n      if (!status && found) {\n        list = list.filter(entry => entry.satid !== item.satid);\n      }\n\n      return list;\n    };\n  }\n\n  render() {\n    const {\n      selected\n    } = this.state;\n    const {\n      satInfo,\n      isLoad\n    } = this.props;\n    const satList = satInfo ? satInfo.above : [];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sat-list-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"sat-list-btn\",\n      size: \"large\",\n      disabled: selected.length === 0,\n      onClick: this.showMap,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, \"Track on the map\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }), isLoad ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spin-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Spin, {\n      tip: \"Loading...\",\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }\n    })) : /*#__PURE__*/React.createElement(List, {\n      className: \"sat-list\",\n      itemLayout: \"horizontal\",\n      dataSource: satList,\n      renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n        actions: [/*#__PURE__*/React.createElement(Checkbox, {\n          dataInfo: item,\n          onChange: this.onChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 56\n          }\n        })],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n        avatar: /*#__PURE__*/React.createElement(Avatar, {\n          src: satellite,\n          size: \"large\",\n          alt: \"satellite\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 51\n          }\n        }),\n        title: /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 50\n          }\n        }, item.satname),\n        description: `Launch Date: ${item.launchDate}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 39\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }));\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.satInfo !== this.props.satInfo) {\n      this.setState({\n        selected: []\n      });\n    }\n  }\n\n}\n\nexport default SatelliteList;","map":{"version":3,"sources":["/Users/linsanity/Documents/Space-X/starlink/src/components/SatelliteList.js"],"names":["React","Component","Button","Spin","List","Avatar","Checkbox","SatelliteList","state","selected","showMap","props","onShowMap","onChange","e","dataInfo","checked","target","list","addOrRemove","setState","item","status","found","some","entry","satid","push","filter","render","satInfo","isLoad","satList","above","length","satellite","satname","launchDate","componentDidUpdate","prevProps","prevState","snapshot"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,QAArC,QAAqD,MAArD;;;AAIA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAClCO,KADkC,GAC1B;AACJC,MAAAA,QAAQ,EAAE;AADN,KAD0B;;AAAA,SA0ClCC,OA1CkC,GA0CxB,MAAM;AACZ,YAAM;AAAED,QAAAA;AAAF,UAAe,KAAKD,KAA1B;AACA,WAAKG,KAAL,CAAWC,SAAX,CAAqBH,QAArB;AACH,KA7CiC;;AAAA,SA+ClCI,QA/CkC,GA+CvBC,CAAC,IAAI;AACZ,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAwBF,CAAC,CAACG,MAAhC;AACA,YAAM;AAAER,QAAAA;AAAF,UAAe,KAAKD,KAA1B;AACA,YAAMU,IAAI,GAAG,KAAKC,WAAL,CAAiBJ,QAAjB,EAA2BC,OAA3B,EAAoCP,QAApC,CAAb;AACA,WAAKW,QAAL,CAAc;AACVX,QAAAA,QAAQ,EAAES;AADA,OAAd;AAGH,KAtDiC;;AAAA,SAwDlCC,WAxDkC,GAwDpB,CAACE,IAAD,EAAOC,MAAP,EAAeJ,IAAf,KAAwB;AAClC,YAAMK,KAAK,GAAGL,IAAI,CAACM,IAAL,CAAWC,KAAK,IAAIA,KAAK,CAACC,KAAN,KAAgBL,IAAI,CAACK,KAAzC,CAAd;;AAEA,UAAGJ,MAAM,IAAI,CAACC,KAAd,EAAqB;AACjBL,QAAAA,IAAI,CAACS,IAAL,CAAUN,IAAV;AACH;;AAED,UAAG,CAACC,MAAD,IAAWC,KAAd,EAAqB;AACjBL,QAAAA,IAAI,GAAGA,IAAI,CAACU,MAAL,CAAaH,KAAK,IAAIA,KAAK,CAACC,KAAN,KAAgBL,IAAI,CAACK,KAA3C,CAAP;AACH;;AAED,aAAOR,IAAP;AACH,KApEiC;AAAA;;AAKlCW,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEpB,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AACA,UAAM;AAACsB,MAAAA,OAAD;AAAUC,MAAAA;AAAV,QAAoB,KAAKpB,KAA/B;AACA,UAAMqB,OAAO,GAAGF,OAAO,GAAGA,OAAO,CAACG,KAAX,GAAmB,EAA1C;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,IAAI,EAAC,OAAtC;AACQ,MAAA,QAAQ,EAAGxB,QAAQ,CAACyB,MAAT,KAAoB,CADvC;AAEQ,MAAA,OAAO,EAAE,KAAKxB,OAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAQQqB,MAAM,gBACF;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,YAAV;AAAuB,MAAA,IAAI,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADE,gBAKF,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AACI,MAAA,UAAU,EAAC,YADf;AAEM,MAAA,UAAU,EAAEC,OAFlB;AAGM,MAAA,UAAU,EAAGX,IAAI,iBACb,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,OAAO,EAAE,cAAC,oBAAC,QAAD;AAAU,UAAA,QAAQ,EAAEA,IAApB;AAA0B,UAAA,QAAQ,EAAE,KAAKR,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAD,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACI,QAAA,MAAM,eAAE,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAEsB,SAAb;AAAwB,UAAA,IAAI,EAAC,OAA7B;AAAqC,UAAA,GAAG,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADZ;AAEI,QAAA,KAAK,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAId,IAAI,CAACe,OAAT,CAFX;AAGI,QAAA,WAAW,EAAG,gBAAef,IAAI,CAACgB,UAAW,EAHjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbZ,CADJ;AA8BH;;AA8BDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,QAAGF,SAAS,CAACT,OAAV,KAAsB,KAAKnB,KAAL,CAAWmB,OAApC,EAA6C;AACzC,WAAKV,QAAL,CAAc;AAACX,QAAAA,QAAQ,EAAE;AAAX,OAAd;AACH;AACJ;;AA1EiC;;AA6EtC,eAAeF,aAAf","sourcesContent":["import React, {Component} from 'react';\nimport { Button, Spin, List, Avatar, Checkbox } from 'antd';\n\nimport satellite from '../assets/images/satellite.svg';\n\nclass SatelliteList extends Component {\n    state = {\n        selected: []\n    }\n\n    render() {\n        const { selected } = this.state;\n        const {satInfo, isLoad} = this.props;\n        const satList = satInfo ? satInfo.above : [];\n\n        return (\n            <div className=\"sat-list-box\">\n                <Button className=\"sat-list-btn\" size=\"large\"\n                        disabled={ selected.length === 0}\n                        onClick={this.showMap} >\n                    Track on the map\n                </Button>\n                <hr/>\n                {\n                    isLoad ?\n                        <div className=\"spin-box\">\n                            <Spin tip=\"Loading...\" size=\"large\"/>\n                        </div>\n                        :\n                        <List className=\"sat-list\"\n                            itemLayout=\"horizontal\"\n                              dataSource={satList}\n                              renderItem={ item => (\n                                  <List.Item actions={[<Checkbox dataInfo={item} onChange={this.onChange}/>]}>\n                                      <List.Item.Meta\n                                          avatar={<Avatar src={satellite} size=\"large\" alt=\"satellite\"/>}\n                                          title={<p>{item.satname}</p>}\n                                          description={`Launch Date: ${item.launchDate}`}\n                                      />\n                                  </List.Item>\n                              )}\n                        />\n                }\n            </div>\n        );\n    }\n\n    showMap = () => {\n        const { selected } = this.state;\n        this.props.onShowMap(selected);\n    }\n\n    onChange = e => {\n        const { dataInfo, checked } = e.target;\n        const { selected } = this.state;\n        const list = this.addOrRemove(dataInfo, checked, selected);\n        this.setState({\n            selected: list\n        })\n    }\n\n    addOrRemove = (item, status, list) => {\n        const found = list.some( entry => entry.satid === item.satid );\n\n        if(status && !found) {\n            list.push(item);\n        }\n\n        if(!status && found) {\n            list = list.filter( entry => entry.satid !== item.satid);\n        }\n\n        return list;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(prevProps.satInfo !== this.props.satInfo) {\n            this.setState({selected: []})\n        }\n    }\n}\n\nexport default SatelliteList;\n"]},"metadata":{},"sourceType":"module"}