{"ast":null,"code":"var _jsxFileName = \"/Users/linsanity/Documents/Space-X/starlink/src/components/Main.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { NEARBY_SATELLITE, SAT_API_KEY, STARLINK_CATEGORY } from '../constants';\nimport SatSetting from './SatSetting';\nimport SatelliteList from './SatelliteList';\nimport WorldMap from './WorldMap';\n\nclass Main extends Component {\n  constructor() {\n    super();\n\n    this.showMap = selected => {\n      this.setState(preState => ({ ...preState,\n        satList: [...selected]\n      }));\n    };\n\n    this.showNearbySatellite = setting => {\n      this.setState({\n        isLoadingList: true,\n        setting: setting\n      });\n      this.fetchSatellite(setting);\n    };\n\n    this.fetchSatellite = setting => {\n      const {\n        observerLat,\n        observerLong,\n        observerElevation,\n        satAlt\n      } = setting;\n      const url = `${NEARBY_SATELLITE}/${observerLat}/${observerLong}/${observerElevation}/${satAlt}/${STARLINK_CATEGORY}&apiKey=${SAT_API_KEY}`;\n      axios.get(url).then(response => {\n        console.log(response);\n        this.setState({\n          satInfo: response.data,\n          isLoadingList: false\n        });\n      }).catch(err => {\n        console.log('fetch satellite failed -> ', err.message);\n      });\n    };\n\n    this.state = {\n      satInfo: null,\n      satList: null,\n      setting: null,\n      isLoadingList: false\n    };\n  }\n\n  render() {\n    const {\n      isLoadingList,\n      satInfo,\n      satList,\n      setting\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left-side\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SatSetting, {\n      onShow: this.showNearbySatellite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(SatelliteList, {\n      isLoad: isLoadingList,\n      satInfo: satInfo,\n      onShowMap: this.showMap,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right-side\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(WorldMap, {\n      satData: satList,\n      observerData: setting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/linsanity/Documents/Space-X/starlink/src/components/Main.js"],"names":["React","Component","axios","NEARBY_SATELLITE","SAT_API_KEY","STARLINK_CATEGORY","SatSetting","SatelliteList","WorldMap","Main","constructor","showMap","selected","setState","preState","satList","showNearbySatellite","setting","isLoadingList","fetchSatellite","observerLat","observerLong","observerElevation","satAlt","url","get","then","response","console","log","satInfo","data","catch","err","message","state","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport { NEARBY_SATELLITE, SAT_API_KEY, STARLINK_CATEGORY } from '../constants';\nimport SatSetting from './SatSetting';\nimport SatelliteList from './SatelliteList';\nimport WorldMap from './WorldMap';\n\nclass Main extends Component {\n    constructor(){\n        super();\n        this.state = {\n            satInfo: null,\n            satList: null,\n            setting: null,\n            isLoadingList: false\n        }\n    }\n    render() {\n        const { isLoadingList, satInfo, satList, setting } = this.state;\n        return (\n            <div className=\"main\">\n                <div className=\"left-side\">\n                    <SatSetting onShow={this.showNearbySatellite}/>\n                    <SatelliteList isLoad={isLoadingList}\n                                   satInfo={satInfo}\n                                   onShowMap={this.showMap} />\n                </div>\n                <div className=\"right-side\">\n                    <WorldMap satData={satList}\n                              observerData={setting} />\n                </div>\n            </div>\n        );\n    }\n\n    showMap = (selected) => {\n        this.setState(preState => ({\n            ...preState,\n            satList: [...selected]\n        }))\n    }\n\n    showNearbySatellite = (setting) => {\n        this.setState({\n            isLoadingList: true,\n            setting: setting\n        })\n        this.fetchSatellite(setting);\n    }\n\n    fetchSatellite = (setting) => {\n        const {\n            observerLat,\n            observerLong,\n            observerElevation,\n            satAlt,\n        } = setting;\n\n        const url = `${NEARBY_SATELLITE}/${observerLat}/${observerLong}/${observerElevation}/${satAlt}/${STARLINK_CATEGORY}&apiKey=${SAT_API_KEY}`;\n        axios.get(url)\n            .then(response => {\n                console.log(response)\n                this.setState({\n                    satInfo: response.data,\n                    isLoadingList: false\n                })\n            })\n            .catch(err => {\n                console.log('fetch satellite failed -> ', err.message);\n            })\n    }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}